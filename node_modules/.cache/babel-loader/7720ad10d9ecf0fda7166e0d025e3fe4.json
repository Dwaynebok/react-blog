{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/becode/projects/react-blog/blog/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]); //the next function is going to add the list\n\n  const AddTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodos = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" whats the plan for Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onsubmit: AddTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: Todo,\n      completeTodo: completeTodos,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/becode/projects/react-blog/blog/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","AddTodo","todo","text","test","newTodos","removeTodo","id","removeArr","filter","completeTodos","updatedTodos","map","isComplete"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADgB,CAGhB;;AACA,QAAMM,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAA0C;AACtC;AACH;;AAED,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GAPD;;AAQA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACrB,UAAMC,SAAS,GAAI,CAAC,GAAGT,KAAJ,EAAWU,MAAX,CAAkBP,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAWA,EAArC,CAAnB;AAEAP,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACH,GAJD;;AAOA,QAAME,aAAa,GAAGH,EAAE,IAAG;AACvB,QAAII,YAAY,GAAGZ,KAAK,CAACa,GAAN,CAAUV,IAAI,IAAG;AAChC,UAAIA,IAAI,CAACK,EAAL,KAAYA,EAAhB,EAAoB;AAChBL,QAAAA,IAAI,CAACW,UAAL,GAAkB,CAACX,IAAI,CAACW,UAAxB;AACH;;AACD,aAAOX,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACH,GARD;;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEV;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,IAAb;AAAmB,MAAA,YAAY,EAAEa,aAAjC;AAAgD,MAAA,UAAU,EAAEJ;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAtCQR,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, {useState} from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    //the next function is going to add the list\n    const AddTodo = todo => {\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n        setTodos(newTodos);\n    };\n    const removeTodo = id => {\n        const removeArr  = [...todos].filter(todo => todo.id !==id)\n\n        setTodos(removeArr)\n    }\n\n\n    const completeTodos = id =>{\n        let updatedTodos = todos.map(todo =>{\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        });\n        setTodos(updatedTodos);\n    };\n\n\n\n    return(\n        <div>\n            <h1> whats the plan for Today</h1>\n            <TodoForm onsubmit={AddTodo}/>\n            <Todo todos={Todo} completeTodo={completeTodos} removeTodo={removeTodo}/>\n        </div>\n    )\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}