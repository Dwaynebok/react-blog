{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/becode/projects/react-blog/blog/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/becode/projects/react-blog/blog/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","map","todo","index","isComplete","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAsBC,EAAAA;AAAtB,CAAd,EAAkD;AAAA;;AAE9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC7BU,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;AAMA,SAAON,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GACZ,UADJ;AAAA,4BAGI;AAAmB,MAAA,OAAO,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACH,EAAN,CAA9C;AAAA,gBACKG,IAAI,CAACG;AADV,OAAUH,IAAI,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AACA,QAAA,OAAO,EAAE,MAAMH,UAAU,CAACM,IAAI,CAACH,EAAN,CADzB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEG,IAAI,CAACH,EAAV;AAAeC,UAAAA,KAAK,EAAEE,IAAI,CAACG;AAA3B,SAAD,CAA9B;AACQ,QAAA,SAAS,EAAC;AADlB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,KACqBF,KADrB;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAmBH;;GA3BQV,I;;KAAAA,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport {RiCloseCircleLine} from \"react-icons/ri\";\nimport {TiEdit} from \"react-icons/ti\";\n\nfunction Todo({ todos, completeTodo,removeTodo }) {\n\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    })\n\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' :\n            'todo-row'} key={index}\n        >\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className=\"icons\" >\n                <RiCloseCircleLine\n                onClick={() => removeTodo(todo.id)}\n                className='delete-icon'/>\n                <TiEdit onClick={() => setEdit({id: todo.id , value: todo.text})}\n                        className='edit-icon'/>\n\n                />\n\n            </div>\n        </div>\n    ))\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}